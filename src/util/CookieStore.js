import sha256 from "js-sha256"

let store = {}

class CookieStore {
	save(cookieObj){
		let domain = cookieObj.domain
		if(!store[domain])
			store.domain = {}
		
		let name = cookieObj.name
		if(!store[domain][name])
			store[domain][name] = {}
		
		let value = cookieObj.value
		if(!store[domain][name][value])
			store[domain][name][value] = {}
		
		
		let hash = this.getHash(cookieObj);
		store[domain][name][value][hash] = cookieObj
	}
	
	get(cookieObj){
		let domain = cookieObj.domain
		if(!store[domain])
			return null
		
		let name = cookieObj.name
		if(!store[domain][name])
			return null
		
		let value = cookieObj.value
		if(!store[domain][name][value])
			return null
		
		let hash = this.getHash(cookieObj);
		return store[domain][name][value][hash]
	}
	
	getHash(cookieObj){
		//hash are generated by removing value and createTime
		let snapshot = Object.assign({}, cookieObj)
		delete snapshot.value
		delete snapshot.createTime
		let hash = sha256(JSON.stringify(snapshot))
		return hash
	}
}

export default new CookieStore()